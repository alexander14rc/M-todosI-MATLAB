clear all
clc
disp('========================================')
disp('         INTERPOLACION DE NEWTON        ')
disp('========================================')
x=input('ingresar los valores del vector x:');%[1 4 6 5 ]
y=input('ingresar los valores del vector y(x):');%[0 1.386294 1.791759 1.609438]
xo=input('ingresar el  valor xo para interpolar :');
n=length(x)-1;
fdd=zeros(n,n);
for i=1:n+1
    fdd(i,1)=y(i);
end
for j=2:n+1
    for i=1:(n+2)-j
        fdd(i,j)=(fdd(i+1,j-1)-fdd(i,j-1))/(x(i+j-1)-x(i));
    end
end
xt=1;
yint(1)=fdd(1,1);% es el bo
ea(1)=0;
fprintf('  Grado    yint    Error(Ea)');
%lo siguiente es para evaluar el xo en la funcion
for k=2:n+1
    xt=xt*(xo-x(k-1));
    yint2=yint(k-1)+fdd(1,k)*xt;%acumula sumas para finalmente calcular F(x0)
    ea(k-1)=yint2-yint(k-1);
    yint(k)=yint2;
end
for q=1:n+1
       if (q>=1&&q<n+1)
       fprintf('\n\t%1.0f\t%f\t%f ',q-1,yint(q),ea(q));
       end
       if q==n+1
      fprintf('\n\t%1.0f\t%f\t ',q-1,yint(q));
       end
   
end 
%lo siguiente es para hallar el error de truncamiento
v=1;
for  k=1:n+1
     v=v*(xo-x(k));
     if k==n
     Rn=fdd(i,j)*v;%Rn=bn*(x-x0)*(x-x1)*.....*(x-xn)
     end
end

fprintf('\n\n la interpolacion para f(%1.0f)es :%5.6f\n\n',xo,yint2);
fprintf(' Error de truncamiento Rn:%5.6f\n\n',abs(Rn));
----------------------------------------------------------------------------------
========================================
         INTERPOLACION DE NEWTON        
========================================
ingresar los valores del vector x:[ 1 4 6 5 3 1.5 2.5 3.5]
ingresar los valores del vector y(x):[0  1.3862944 1.7917595 1.6094379 1.0986123 0.4054641 0.9162907 1.2527630]
ingresar el  valor xo para interpolar :2
         Grado    yint    Error(Ea)
	0	0.000000	0.462098 
	1	0.462098	0.103746 
	2	0.565844	0.062924 
	3	0.628769	0.046953 
	4	0.675722	0.021791 
	5	0.697513	-0.003616 
	6	0.693897	-0.000459 
	7	0.693438	 

 la interpolacion para f(2)es :0.693438

 Error de truncamiento Rn:0.000459
