%Programa principal de Runge-Kutta 1 EDo almacenado vectorialmente
disp(' RK4 una EDO :');
f1=input('La EDO  Dy1Dx=','s');
y0=input('Valor incial de la variable dependientes y0=');
xi=input('Variable incial independiente xi=');
xf=input('Varible final varible independinte xf=');
dx=input('Tamaño de paso:');
n = 1 ;
x = xi;
m = 1;
xp(m) = x;
A(1,:) = [0 0 0 0];
for i = 1:n
    yp(i,m) = y0(i);
    y(i) = y0(i);
end
while (x<xf)
    xend = x + dx;
    if xend > xf
        xend = xf;
    end
    h = dx;
    [x,y,kt] = integradorRK4con1EDO(x,y,n,h,xend,f1);  %[x,y] = integradorRK4con1EDO(x,y,n,h,xend,f1);
    m = m +1;
    A(m,:) = kt;
    xp(m) = x;
    for i = 1:n
        yp(i,m) = y(i);
    end
end
f2 = dsolve('Dy = -2*x^3+12*x^2-20*x+8.5','y(0)=1','x');
%f2 = dsolve('Dy = 4*exp(0.8*x)-0.5*y','y(0)=2','x');
f2 = inline(f2);
yv = f2(xp);
fprintf('\n X          Yverdadera    YRK4      et         k1          k2           k3          k4\n')
for j = 1:m
    et = (abs(yv(j)-yp(1,j))/yv(j))*100 ;
    if j == 1
        fprintf('\n %3.5f %10.5f  %10.5f  %10.5f\n ',xp(j),yv(j),yp(1,j),et)
    else
        fprintf('\n %3.5f %10.5f  %10.5f  %10.5f %10.5f %10.5f %10.5f %10.5f\n ',xp(j),yv(j),yp(1,j),et,A(j,1),A(j,2),A(j,3),A(j,4))
    end     
end